export enum IpcChannel {
  workerList = 'worker-list',
  workerCreate = 'worker-create',
  workerGet = 'worker-get',
  workerGetSubscription = 'worker-get-subscription',
  workerFlow = 'worker-flow',
  workerInstall = 'worker-install',
  workerPause = 'worker-pause',
  workerTerminate = 'worker-terminate',
  workerSearch = 'worker-search',
  workerSearchDisplay = 'worker-search-display',
  workerPost = 'worker-post',
  workerDiagnostics = 'worker-diagnostics',
  workerLaunchNode = 'worker-launch',
  workerClearCache = 'worker-clear-cache',
  workerDashboardList = 'worker-dashboard-list',
  workerUpdated = 'worker-updated',
  workerIsKYCDone = 'worker-is-kyc-done',

  favouriteList = 'favourite-list',
  favouriteCreate = 'favourite-create',
  favouriteDelete = 'favourite-delete',

  flowDownloadProgress = 'flow-download-progress',
  flowDownloadCompleted = 'flow-download-completed',
  flowDownloadError = 'flow-download-error',

  walletInit = 'wallet-init',
  walletCreate = 'wallet-create',
  walletDetails = 'wallet-details',
  walletDetailsBySeed = 'wallet-details-by-seed',
  walletGetSeedPhrase = 'wallet-get-seed-phrase',
  walletLogin = 'wallet-login',
  walletTransfer = 'wallet-transfer',
  walletAddAccount = 'wallet-add-account',
  walletIsAvailable = 'wallet-is-available',
  walletCheckMnemonic = 'wallet-check-mnemonic',
  walletLedgerStatus = 'wallet-ledger-status',

  lifting = 'lifting',

  sysInfo = 'system-infomation',
  systemTheme = 'system-theme',

  addressCreate = 'address-create',
  addressUpdate = 'address-update',
  addressDelete = 'address-delete',
  addressList = 'address-list',
  addressBalanceQuery = 'address-balance-query',
  addressBalanceUpdated = 'address-balance-updated',

  solutionList = 'solution-list',
  solutionGroupStatusUpdated = 'solution-group-status-updated',
  walletConstant = 'wallet-constant',
  ewxAddressSet = 'ewx-address-set',

  workerStatusCreate = 'worker-status-create',

  getTimestampFromBlockNumber = 'get-timestamp-from-block-number',
  getSolutionGroupStatus = 'get-solution-group-status',
  getSubscriptions = 'get-subscriptions',

  workerIsVotingEnabled = 'worker-is-voting-enabled',
  workerSetVoting = 'worker-set-voting',
  workerSetStaked = 'worker-set-staked',
  workerUpdateFloatingStaked = 'worker-update-floating-staked',
  workerVote = 'worker-vote',
  workerWithEWXLinkedStatus = 'worker-with-ewx-linked-status',
  getLinkedWorkerNode = 'get-linked-worker-node',
  walletWorkerAddress = 'wallet-worker-address',
  shouldPromptWorkerLogin = 'should-prompt-worker-login',
  fetchWhitelistSolutionGroups = 'fetch-whitelist-solution-groups',
  workerIsStaking = 'worker-is-staking',
  getSolutionGroupStake = 'get-solution-group-stake',
  resetAllSubscriptions = 'reset-all-subscriptions',
  subscriptionFlags = 'subscription-flags',
  lastEWXAccount = 'last-EWX-account',
  resetEwxAccount = 'reset-ewx-account',
  syncBaseData = 'sync-base-data',
  syncEarnedRewards = 'sync-earned-rewards',
  startBaseDataScheduler = 'start-base-data-scheduler',
  resetBaseDataAndSync = 'reset-base-data-and-sync',
  appInitProgress = 'app-init-progress',
  appInitError = 'app-init-error',
  appInitCompleted = 'app-init-completed',
  appInit = 'app-init',
  resetAllSubscriptionsByEwx = 'reset-all-subscriptions-by-ewx',
  appInitWorker = 'app-init-worker',
  continueAppInit = 'continue-app-init',
  appInitEnvReload = 'app-init-env-reload',

  notificationsGetAll = 'notifications-get-all',
  notificationsCreate = 'notifications-create',
  notificationsMarkAsRead = 'notifications-mark-as-read',
  notificationsDismiss = 'notifications-dismiss',

  queryWorkerAddress = 'query-worker-address',
  updateFetchWorkers = 'update-fetch-workers',
  queryEWXPreference = 'query-EWX-preference',

  ewtusdUpdated = 'ewtusd-updated',
  getEwxUsd = 'get-ewx-usd',
  getFeeEWX = 'get-fee-ewx',
  getFeeEWC = 'get-fee-ewc',
  setSubcriptionBlock = 'set-subcription-block',
  queryBalance = 'query-balance',
  getEarnedRewards = 'get-earned-rewards',
  getCurrentRewardPeriod = 'get-current-reward-period',
  getCurrentVoteAndRewardPeriod = 'get-current-vote-and-reward-period',
  getTransactionsByPeriod = 'get-transactions-by-period',
  getVotingGraphData = 'get-voting-graph-data',
  setPendingUnsubscription = 'set-pending-unsubscription',
  exportLogs = 'export-logs',

  solutionNodeStatus = 'solution-node-status',
  listRuleActiveInMinute = 'list-rule-active-in-minute',
  updateRuleActiveInMinute = 'update-rule-active-in-minute',
  workerEngineRestart = 'worker-engine-restart',
  engineStartStatus = 'engine-start-status',
  workerEngineStart = 'worker-engine-start',
  engineCloseStatus = 'engine-close-status',
  workerSubcribeReadyToVote = 'worker-subcribe-ready-to-vote',

  restartApp = 'restart-app',
  closeApp = 'close-app',
  isTestVersion = 'is-test-version',
  validateWorkerAddress = 'validate-worker-address',
  checkUnClaimSolution = 'check-unclaim-solution',
  sendNotification = 'send-notification',
  listUnClaimRewards = 'list-unclaim-rewards',
  walletDeviceConnect = 'wallet-device-connect',
  walletDeviceSign = 'wallet-device-sign',
  WalletDeviceLocked = 'wallet-device-locked',
  WalletDevicePlugged = 'wallet-device-plugged',
  WalletDeviceLifting = 'wallet-device-lifting',
  WalletDeviceLowering = 'wallet-device-lowering',

  heroBannerDataUrl = 'hero-banner-data-url',
  workerCardDataUrl = 'worker-card-data-url',
  notificationsDataUrl = 'notifications-data-url',
  blacklistedSolutionGroupsDataUrl = 'blacklisted-solutions-data-url',
  newRelease = 'new-release',
  deleteWorker = 'delete-worker',
  setRemoteWorker = 'set-remote-worker',
  isRunLocal = 'is-run-local',
  deepLink = 'deep-link',
  deepLinkLaunch = 'deep-link-launch',
}
